{:paths ["src" "dev" "test"]
 :deps
 {selmer/selmer               {:mvn/version "1.12.50"}
  day8.re-frame/async-flow-fx {:mvn/version "0.3.0"}
  lambdaisland/uri            {:mvn/version "1.13.95"
                               :exclusions  [org.clojure/data.json]}

  io.aviso/pretty {:mvn/version "1.1.1"}
  environ/environ {:mvn/version "1.2.0"}

  expound/expound             {:mvn/version "0.9.0"}
  com.cognitect/transit-clj   {:mvn/version "1.0.329"}
  com.cognitect/transit-cljs  {:mvn/version "0.8.269"}
  org.clojure/clojure         {:mvn/version "1.11.1"}
  ;; org.clojure/clojurescript     {:mvn/version "1.10.866"}
  org.clojure/data.json       {:mvn/version "2.4.0"}
  org.clojure/tools.cli       {:mvn/version "1.0.206"}
  thheller/shadow-cljs        {:mvn/version "2.18.0"}
  com.github.awkay/workspaces {:mvn/version "1.0.3"}
  hashp/hashp                 {:mvn/version "0.2.1"}
  vlaaad/reveal               {:mvn/version "1.3.273"}
  philoskim/debux             {:mvn/version "0.8.2"}
  philoskim/debux-stubs       {:mvn/version "0.8.2"}
  org.clojure/core.async      {:mvn/version "1.5.648"}
  fipp/fipp                   {:mvn/version "0.6.25"}
  com.taoensso/truss          {:mvn/version "1.6.0"}
  cheshire/cheshire           {:mvn/version "5.10.2"}
  medley/medley               {:mvn/version "1.4.0"}
  com.taoensso/encore         {:mvn/version "3.21.0"}
  funcool/promesa             {:mvn/version "8.0.450"}
  funcool/cuerdas             {:mvn/version "2022.03.27-397"}
  com.fzakaria/slf4j-timbre   {:mvn/version "0.3.21"} ;; no undertow debug logs

  ;; babashka
  babashka/process  {:mvn/version "0.1.1"}
  babashka/babashka {:mvn/version "0.8.2-SNAPSHOT"}
  babashka/fs       {:mvn/version "0.1.4"}

  ;; cider
  nrepl/nrepl                   {:mvn/version "0.9.0"}
  cider/cider-nrepl             {:mvn/version "0.28.3"}
  refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}
  clj-commons/fs                {:mvn/version "1.6.310"}
  djblue/portal                 {:mvn/version "0.25.0"}}

 :aliases
 {:repl/cider-refactor
  {:extra-deps {nrepl/nrepl                   {:mvn/version "0.9.0"}
                cider/cider-nrepl             {:mvn/version "0.28.3"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}}
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]"
                "-i"]}

  :jvm-repl
  {:extra-deps
   {com.bhauman/rebel-readline {:mvn/version "RELEASE"}}
   :main-opts ["-m" "rebel-readline.main"]}

  :shadow-cljs
  {:main-opts ["-m" "shadow.cljs.devtools.cli"]}

  :cljs
  {:extra-deps
   {reagent/reagent                 {:mvn/version "1.1.1"}
    re-frame/re-frame               {:mvn/version "1.2.0"}
    re-graph/re-graph               {:mvn/version "0.1.17"}
    metosin/reitit                  {:mvn/version "0.5.18"}
    binaryage/oops                  {:mvn/version "0.7.2"}
    metosin/malli                   {:mvn/version "0.8.4"}
    superstructor/re-frame-fetch-fx {:mvn/version "0.2.0"}
    markdown-clj/markdown-clj       {:mvn/version "1.11.1"}
    com.cognitect/transit-cljs      {:mvn/version "0.8.269"}
    datascript/datascript           {:mvn/version "1.3.12"}
    hashp/hashp                     {:mvn/version "0.2.1"}
    bidi/bidi                       {:mvn/version "2.1.6"}
    clj-commons/pushy               {:mvn/version "0.3.10"}
    garden/garden                   {:mvn/version "1.3.10"}
    com.lambdaisland/glogi          {:mvn/version "1.1.144"}
    net.dhleong/spade               {:mvn/version "1.2.0-SNAPSHOT"}
    re-pressed/re-pressed           {:mvn/version "0.3.1"}
    breaking-point/breaking-point   {:mvn/version "0.1.2"}
    binaryage/devtools              {:mvn/version "1.0.6"}
    thheller/shadow-cljs            {:mvn/version "2.18.0"}
    day8/shadow-git-inject          {:mvn/version "0.0.5"}
    day8.re-frame/re-frame-10x      {:mvn/version "1.2.6"}
    day8.re-frame/tracing           {:mvn/version "0.6.2"}
    com.lambdaisland/ornament       {:mvn/version "0.4.34"}
    girouette/girouette             {:mvn/version "0.0.7"}
    girouette/processor             {:mvn/version "RELEASE"}}}

  :css
  {; clojure -X:css
   :extra-deps {girouette/processor {:mvn/version "0.0.7"}}
   :ns-default girouette.processor
   :exec-fn    process
   :exec-args  {:css           {:output-file "resources/app/public/css/compiled/main.css"}
                :garden-fn     fgl.app.grammer/class-name->garden
                :apply-classes fgl.app.css/composed-classes
                :watch?        true
                #_#_:dry-run? true}}
  :css-prod
  {; clojure -X:css-prod
   :extra-deps {girouette/processor {:mvn/version "0.0.7"}}
   :ns-default girouette.processor
   :exec-fn    process
   :exec-args  {:css           {:output-file "resources/app/public/css/compiled/main.css"}
                :garden-fn     fgl.app.grammer/class-name->garden
                :apply-classes fgl.app.css/composed-classes
                #_#_:dry-run? true}}
  :css-front
  {; clojure -X:css
   :extra-deps {girouette/processor {:mvn/version "0.0.7"}}
   :ns-default girouette.processor
   :exec-fn    process
   :exec-args  {:css           {:output-file "resources/front/public/css/compiled/main.css"}
                :garden-fn     fgl.app.grammer/class-name->garden
                :apply-classes fgl.app.css/composed-classes
                :watch?        true
                #_#_:dry-run? true}}
  :css-front-prod
  {; clojure -X:css-prod
   :extra-deps {girouette/processor {:mvn/version "0.0.7"}}
   :ns-default girouette.processor
   :exec-fn    process
   :exec-args  {:css           {:output-file "resources/front/public/css/compiled/main.css"}
                :garden-fn     fgl.app.grammer/class-name->garden
                :apply-classes fgl.app.css/composed-classes
                #_#_:dry-run? true}}
  :css-cards
  {; clojure -X:css-cards
   :extra-deps {girouette/processor {:mvn/version "0.0.7"}}
   :ns-default girouette.processor
   :exec-fn    process
   :exec-args  {:css           {:output-file "resources/cards/public/css/compiled/main.css"}
                :garden-fn     fgl.app.grammer/class-name->garden
                :apply-classes fgl.app.css/composed-classes
                :watch?        true
                #_#_:dry-run? true}}

  :outdated
  {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
   :main-opts  ["-m" "antq.core"]}}}
